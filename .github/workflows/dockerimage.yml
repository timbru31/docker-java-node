name: Test Docker image

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Build the Docker image
        run: |
          printf "\n\nJDK8 with Node.js 18\n"
          docker run -i $(docker build -q 8/jdk/18) /bin/sh -c "java -version && node --version"
          printf "\n\nJDK8 alpine with Node.js 18\n"
          docker run -i $(docker build -q 8/jdk/18/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJDK8 with Node.js 20\n"
          docker run -i $(docker build -q 8/jdk/20) /bin/sh -c "java -version && node --version"
          printf "\n\nJDK8 alpine with Node.js 20\n"
          docker run -i $(docker build -q 8/jdk/20/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJRE8 with Node.js 18\n"
          docker run -i $(docker build -q 8/jre/18) /bin/sh -c "java -version && node --version"
          printf "\n\nJRE8 alpine with Node.js 18\n"
          docker run -i $(docker build -q 8/jre/18/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJRE8 with Node.js 20\n"
          docker run -i $(docker build -q 8/jre/20) /bin/sh -c "java -version && node --version"
          printf "\n\nJRE8 alpine with Node.js 20\n"
          docker run -i $(docker build -q 8/jre/20/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJDK11 with Node.js 18\n"
          docker run -i $(docker build -q 11/jdk/18) /bin/sh -c "java -version && node --version"
          printf "\n\nJDK11 alpine with Node.js 18\n"
          docker run -i $(docker build -q 11/jdk/18/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJDK11 with Node.js 20\n"
          docker run -i $(docker build -q 11/jdk/20) /bin/sh -c "java -version && node --version"
          printf "\n\nJDK11 alpine with Node.js 20\n"
          docker run -i $(docker build -q 11/jdk/20/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJRE11 with Node.js 18\n"
          docker run -i $(docker build -q 11/jre/18) /bin/sh -c "java -version && node --version"
          printf "\n\nJRE11 alpine with Node.js 18\n"
          docker run -i $(docker build -q 11/jre/18/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJRE11 with Node.js 20\n"
          docker run -i $(docker build -q 11/jre/20) /bin/sh -c "java -version && node --version"
          printf "\n\nJRE11 alpine with Node.js 20\n"
          docker run -i $(docker build -q 11/jre/20/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJDK17 with Node.js 18\n"
          docker run -i $(docker build -q 17/jdk/18) /bin/sh -c "java -version && node --version"
          printf "\n\nJDK17 alpine with Node.js 18\n"
          docker run -i $(docker build -q 17/jdk/18/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJDK17 with Node.js 20\n"
          docker run -i $(docker build -q 17/jdk/20) /bin/sh -c "java -version && node --version"
          printf "\n\nJDK17 alpine with Node.js 20\n"
          docker run -i $(docker build -q 17/jdk/20/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJRE17 with Node.js 18\n"
          docker run -i $(docker build -q 17/jre/18) /bin/sh -c "java -version && node --version"
          printf "\n\nJRE17 alpine with Node.js 18\n"
          docker run -i $(docker build -q 17/jre/18/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJRE17 with Node.js 20\n"
          docker run -i $(docker build -q 17/jre/20) /bin/sh -c "java -version && node --version"
          printf "\n\nJRE17 alpine with Node.js 20\n"
          docker run -i $(docker build -q 17/jre/20/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJDK21 with Node.js 18\n"
          docker run -i $(docker build -q 21/jdk/18) /bin/sh -c "java -version && node --version"
          printf "\n\nJDK21 alpine with Node.js 18\n"
          docker run -i $(docker build -q 21/jdk/18/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJDK21 with Node.js 20\n"
          docker run -i $(docker build -q 21/jdk/20) /bin/sh -c "java -version && node --version"
          printf "\n\nJDK21 alpine with Node.js 20\n"
          docker run -i $(docker build -q 21/jdk/20/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJRE21 with Node.js 18\n"
          docker run -i $(docker build -q 21/jre/18) /bin/sh -c "java -version && node --version"
          printf "\n\nJRE21 alpine with Node.js 18\n"
          docker run -i $(docker build -q 21/jre/18/alpine) /bin/sh -c "java -version && node --version"

          printf "\n\nJRE21 with Node.js 20\n"
          docker run -i $(docker build -q 21/jre/20) /bin/sh -c "java -version && node --version"
          printf "\n\nJRE21 alpine with Node.js 20\n"
          docker run -i $(docker build -q 21/jre/20/alpine) /bin/sh -c "java -version && node --version"

  auto-merge:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Automatically merge dependabot upgrades
        uses: fastify/github-action-merge-dependabot@v3.10.1
        with:
          target: minor
